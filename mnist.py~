import ssl
from sklearn.datasets import fetch_openml
ssl._create_default_https_context = ssl._create_unverified_context

def normalize_to_zero_to_one(x):
    return (x - x.min())/(x.max() - x.min())

def normalize_to_neg_one_to_one(x):
    return normalize_to_zero_to_one(x) * 2 - 1

def unnormalize_image(xs):
    assert len(xs.shape) == 4
    ys = []
    for x in xs:
        ys.append(normalize_to_zero_to_one(x) * 255) # pixel values to range from 0 to 255
    return ys

def get_training_data():
    images, labels = fetch_openml('mnist_784', version=1, return_X_y=True, parser='auto')
    images = images.to_numpy()
    images = images.reshape(images.shape[0], 28, 28, 1) # (n, 28, 28, 1)
    normalized_images = jnp.array(normalize_to_neg_one_to_one(images[:SAMPLES_SIZE]))
    labels = jnp.uint16(labels.to_numpy())
    return normalized_images
